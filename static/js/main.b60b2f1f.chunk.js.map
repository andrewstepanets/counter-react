{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","useState","setMonsters","search","setSearch","useEffect","a","fetch","then","res","json","users","catch","error","console","log","fetchData","filteredMonsters","filter","toLowerCase","includes","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAeeA,MAXf,YAA4B,IAAZC,EAAW,EAAXA,QACZ,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,IAAMC,IAAKJ,EAAQK,OAC7D,6BAAKL,EAAQK,OACb,4BAAIL,EAAQM,Y,MCKTC,MAVf,YAAiC,IAAbC,EAAY,EAAZA,SAChB,OACI,qBAAKP,UAAU,YAAf,SACKO,EAASC,KAAI,SAAAT,GAAO,OACjB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,U,MCKpBO,MAVf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC9B,OACI,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,K,MCiCPG,MAnCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNR,EADM,KACIS,EADJ,OAEeD,mBAAS,IAFxB,mBAENE,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sEACQC,MAAM,8CACTC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAIT,EAAYS,MAC1BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAR,mCAAwCF,OAJ5D,4CADc,uBAAC,WAAD,wBAOdG,MAMF,IAAMC,EAAmBxB,EAASyB,QAAO,SAAAjC,GAAO,OAC9CA,EAAQK,KACL6B,cACAC,SAASjB,EAAOgB,kBAIrB,OACE,sBAAKjC,UAAU,UAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAc,SAACwB,GAAD,OAAOjB,EAAUiB,EAAEC,OAAOC,UAC1C,cAAC,EAAD,CAAU9B,SAAUwB,Q,MC/B1BO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b60b2f1f.chunk.js","sourcesContent":["import React from 'react';\nimport './card.scss';\n\n\nfunction Card({ monster }) {\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${monster.id}`} alt={monster.name} />\n            <h2>{monster.name}</h2>\n            <p>{monster.email}</p>\n\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from 'components/card/card'\nimport './card-list.scss';\n\nfunction CardList({ monsters }) {\n    return (\n        <div className=\"card-list\">\n            {monsters.map(monster => (\n                <Card key={monster.id} monster={monster} />\n            ))}\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react';\nimport './search-box.scss';\n\nfunction SearchBox({ placeholder, handleChange }) {\n    return (\n        <input\n            className=\"search\"\n            type='search'\n            placeholder={placeholder}\n            onChange={handleChange} />\n    )\n}\n\nexport default SearchBox;","\nimport { useEffect, useState } from 'react';\nimport CardList from 'components/card-list/card-list';\nimport SearchBox from 'components/search-box/search-box';\n\nimport './App.scss';\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetch('https://jsonplaceholder.typicode.com/users')\n        .then(res => res.json())\n        .then(users => setMonsters(users))\n        .catch(error => console.log(`Something wrong with API ${error}`))\n    }\n    fetchData();\n  });\n\n  // const filteredMonsters = monsters.filter(monster =>\n  //   monster.name.toLowerCase().includes(search).toLowerCase()\n  // )\n  const filteredMonsters = monsters.filter(monster => (\n    monster.name\n      .toLowerCase()\n      .includes(search.toLowerCase())\n  ))\n\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox\n        placeholder='Search Monsters'\n        handleChange={(e) => setSearch(e.target.value)} />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}